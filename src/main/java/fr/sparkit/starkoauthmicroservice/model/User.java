package fr.sparkit.starkoauthmicroservice.model;import com.fasterxml.jackson.annotation.JsonProperty;import io.swagger.annotations.ApiModel;import io.swagger.annotations.ApiModelProperty;import lombok.*;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import javax.persistence.*;import java.io.Serializable;import java.util.Collection;import java.util.List;@Entity@Table(name = "MasterUser")@Getter@Setter@NoArgsConstructor@AllArgsConstructor@EqualsAndHashCode(onlyExplicitlyIncluded = true)@ToString@ApiModel("All details about User")public class User implements Serializable, UserDetails {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    @Column(name = "Id")    @EqualsAndHashCode.Include    @ApiModelProperty("The database generate user Id")    private Integer id;    @Column(name = "FirstName")    @ApiModelProperty("User first name")    private String firstName;    @Column(name = "LastName")    @ApiModelProperty("User last name")    private String lastName;    @Column(name = "Email")    @ApiModelProperty("User email")    private String email;    @Column(unique = true, name = "Login")    @ApiModelProperty("User login")    private String login;    @Transient    private String username;    @Column(name = "Password")    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)    @ApiModelProperty("User password")    private String password;    @Column(name = "Token")    @ApiModelProperty("User token")    private String token;    @Column(name = "LastConnectedCompany")    @ApiModelProperty("User last connected company")    private String lastConnectedCompany;    @Column(name = "IsDeleted")    @ApiModelProperty("Is user deleted")    private boolean isDeleted;    @Column(name = "TransactionUserId")    @ApiModelProperty("User transaction id")    private Long transactionUserId;    @Column(name = "Deleted_Token")    @ApiModelProperty("User deleted token")    private String deletedToken;    @Column(columnDefinition = "bit default 1", name = "Enabled")    @ApiModelProperty("User enabled")    private boolean enabled;    @Column(columnDefinition = "bit default 1", name = "AccountNonLocked")    @ApiModelProperty("User account non locked")    private boolean accountNonLocked;    @Column(columnDefinition = "bit default 1", name = "AccountNonExpired")    @ApiModelProperty("User account non expired")    private boolean accountNonExpired;    @Column(columnDefinition = "bit default 1", name = "CredentialsNonExpired")    @ApiModelProperty("User credentials non expired")    private boolean credentialsNonExpired;    @Column(columnDefinition = "bit default 1", name = "IsBToB")    @ApiModelProperty("Is BtoB user")    private boolean isBToB;    @Transient    @ApiModelProperty("User roles")    private List<Role> roles;    @Transient    @ApiModelProperty("User authorities")    private Collection<? extends GrantedAuthority> authorities;    @Column(name = "Language")    @ApiModelProperty("User language")    private String language;    @Override    @SuppressWarnings("squid:S4275")    public String getUsername() {        return this.email;    }}